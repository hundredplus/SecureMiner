
package ppdm.test;

import java.math.BigInteger;
import java.util.Random;
import ppdm.core.crypto.Paillier;

/**
 *
 * @author ductran
 *
 * @date Aug 29, 2008
 * 
 * This class automaticly generates data
 */
public class AutoGenerateData {
    private BigInteger[] privateVectorData;    
    public BigInteger[] encPrivateVectorData;
    
    public AutoGenerateData(int vectorSize){
                
        BigInteger[] vector = new BigInteger[vectorSize];        
        Random rd = new Random();
        for (int i = 0; i < vectorSize; i++){
            vector[i] = new BigInteger(Integer.toString(rd.nextInt(10)));                        
        }

        this.privateVectorData = vector;
        
    }
    
    public void encryptData(Paillier pail){

        BigInteger[] encVector = new BigInteger[privateVectorData.length];
        for (int i = 0; i < privateVectorData.length; i++){
            encVector[i] = pail.encrypt(privateVectorData[i]);
//            System.out.println(encVector[i]);
        }
        this.encPrivateVectorData = encVector;
    }
    
    public AutoGenerateData(){
        this(1000);
    }

    public BigInteger[] getEncPrivateVectorData() {
        return encPrivateVectorData;
    }

    public void setEncPrivateVectorData(BigInteger[] encPrivateVectorData) {
        this.encPrivateVectorData = encPrivateVectorData;
    }

    public BigInteger[] getPrivateVectorData() {
        return privateVectorData;
    }

    public void setPrivateVectorData(BigInteger[] privateVectorData) {
        this.privateVectorData = privateVectorData;
    }

    public static void main(String[] args){
        AutoGenerateData agd = new AutoGenerateData(10);
    }
}
