/*
 * DataViewer.java
 *
 * Created on October 20, 2008, 2:41 PM
 */
package ppdm.core.data;

import ppdm.gui.*;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import ppdm.algo.association.AssoData;
import ppdm.algo.association.ItemSet;
import ppdm.core.ErrorController;
import ppdm.core.Config;

/**
 *
 * @author  Tran Huy Duc
 */
public class DataViewer extends javax.swing.JInternalFrame {

    /** Creates new form DataViewer */
    public DataViewer() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtblViewData = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        jOpenMenuItem = new javax.swing.JMenuItem();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("View data");

        jtblViewData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jtblViewData);

        fileMenu.setText("File");
        fileMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileMenuActionPerformed(evt);
            }
        });

        jOpenMenuItem.setText("Open");
        jOpenMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jOpenMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(jOpenMenuItem);

        jMenuBar1.add(fileMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 674, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void fileMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuActionPerformed
}//GEN-LAST:event_fileMenuActionPerformed

private void jOpenMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jOpenMenuItemActionPerformed
    JFileChooser jfc = new JFileChooser();
    int jc = jfc.showDialog(null, "Load data ...");
    if (jc == JFileChooser.APPROVE_OPTION) {
        try {
            File file = jfc.getSelectedFile();
            String filename = file.getAbsolutePath();
            this.setTitle(filename);
            ArrayList<ItemSet> data = AssoData.readNominalData(filename);
            String[] colName = new String[data.size()+1];
            colName[0] = "";
            for (int i = 0; i < data.size(); i++) {
                colName[i+1] = data.get(i).getItem().get(0);
            }

            DefaultTableModel dtm = new DefaultTableModel(colName, 0);
            int valSize = data.get(0).getStrVals().size();
            for (int i = 0; i < valSize; i++) {
                String[] rowData = new String[data.size()+1];
                rowData[0] = Integer.toString(i+1);
                for (int j = 0; j < data.size(); j++) {                    
                    rowData[j+1] = data.get(j).getStrVals().get(i);
                    if (rowData[j+1].equalsIgnoreCase(Config.MISS_VALUE))
                        rowData[j+1] = null;
                }
                dtm.addRow(rowData);
            }
            jtblViewData.setModel(dtm);
            CustomTableColumnModel.calcColumnWidths(jtblViewData);
        } catch (Exception ex) {
            ErrorController.show(null, ex);
        }
    }
}//GEN-LAST:event_jOpenMenuItemActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jOpenMenuItem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtblViewData;
    // End of variables declaration//GEN-END:variables
}
